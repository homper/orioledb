name: check

on:
  push:
  pull_request:

jobs:
  check:
    runs-on:
      - ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        pg_version: [16, 17]
        compiler: [clang, gcc]
        check_type:
          [normal, debug, sanitize, check_page, valgrind_1, valgrind_2, pg_tests]
    env:
      LLVM_VER: 18
      CPU: ${{ matrix.cpu }}
      CHECK_TYPE: ${{ matrix.check_type }}
      COMPILER: ${{ matrix.compiler }}
    steps:
      - name: Checkout extension code into workspace directory
        uses: actions/checkout@v4
        with:
          path: orioledb
      - name: Get the required tag name
        shell: bash
        run: |
          echo "PGTAG=$(grep '^${{ matrix.pg_version }}: ' orioledb/.pgtags | cut -d' ' -f2-)" >> $GITHUB_ENV
      - name: Checkout PostgreSQL code into workspace directory
        uses: actions/checkout@v4
        with:
          repository: orioledb/postgres
          ref: ${{ env.PGTAG }}
          path: postgresql
      - name: Setup prerequisites
        run: bash ./orioledb/ci/prerequisites.sh
      - name: Build
        run: bash ./orioledb/ci/build.sh
      - name: Install post build prerequisites
        run: bash ./orioledb/ci/post_build_prerequisites.sh
      - name: Check
        timeout-minutes: ${{ startsWith(matrix.check_type, 'valgrind_') && 150 || 20 }}
        run: bash ./orioledb/ci/check.sh
      - name: Check output
        run: bash ./orioledb/ci/check_output.sh
        if: ${{ success() || failure() }}
      - name: Show stuck processes
        run: bash ./orioledb/ci/list_stuck.sh
        if: ${{ always() }}
      - name: Run lcov
        if: ${{ matrix.check_type != 'sanitize' && matrix.check_type != 'check_page' }}
        run: bash ./orioledb/ci/lcov.sh
      - name: create artifact for coverage.info
        if: ${{ matrix.check_type != 'sanitize' && matrix.check_type != 'check_page' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pg_version }}_${{ matrix.compiler }}_${{ matrix.check_type }}_coverage.info
          path: ./orioledb/coverage.info
          retention-days: 1

  finish:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout extension code into workspace directory
        uses: actions/checkout@v4
        with:
          path: orioledb
      - name: Retrieve saved coverage.infos
        uses: actions/download-artifact@v4
      - name: Merge coverage files
        run: bash ./orioledb/ci/lcov_merge.sh
      - name: coveralls
        uses: coverallsapp/github-action@v2
        with:
          files: ./orioledb/coverage.info

  cleanup:
    needs: finish
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: remove artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
            name: '*coverage.info'
